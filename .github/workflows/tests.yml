name: Tests

on: [push, pull_request]

permissions:
  id-token: write
  contents: read

env:
  AWS_ACCOUNT_ID: 637423602143
  AWS_REGION: eu-north-1
  ECR_REPOSITORY: locust

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v2
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: uv venv --python 3.11
      - run: uv run ruff check
      - run: uv run ruff format --check
      - run: uv run pyright
      # any local changes would make hatch-vcs set a "local version" (+dev0...), so we ignore any uv.lock updates:
      - run: git update-index --assume-unchanged uv.lock 
      - run: uv run locust-cloud --help
      - run: uvx --from build pyproject-build --wheel --installer uv
      - uses: actions/upload-artifact@v4
        with:
          name: dist-artifact
          path: dist/*
          
  lint_typecheck_webui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: borales/actions-yarn@v5
        with:
          cmd: install
          dir: locust_cloud/webui
      - uses: borales/actions-yarn@v5
        with:
          cmd: lint
          dir: locust_cloud/webui
      - uses: borales/actions-yarn@v5
        with:
          cmd: type-check
          dir: locust_cloud/webui  
    
  publish:
    name: Publish to PyPI
    needs: [build, lint_typecheck_webui]
    if: startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Download Python dist
        uses: actions/download-artifact@v4
        with:
          name: dist-artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1

  publish_docker:
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GitHubActionsECRPushRole
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActionsECRPushSession

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
 
      - name: Set image tags and repository
        id: tags
        run: |
          if [[ $GITHUB_REF == refs/heads/master ]]; then
            TAGS="master"
            REPO="${{ env.ECR_REPOSITORY }}"
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            TAGS="$VERSION latest"
            REPO="${{ env.ECR_REPOSITORY }}"
          else
            echo "No matching branch or tag found. Exiting."
            exit 1
          fi
          echo "TAGS=$TAGS" >> $GITHUB_ENV
          echo "REPO=$REPO" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          sleep 30
          docker build -t locust .
          for TAG in $TAGS; do
            docker tag locust:latest ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.REPO }}:$TAG
          done

      - name: Push Docker image to ECR
        run: |
          for TAG in $TAGS; do
            docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.REPO }}:$TAG
          done